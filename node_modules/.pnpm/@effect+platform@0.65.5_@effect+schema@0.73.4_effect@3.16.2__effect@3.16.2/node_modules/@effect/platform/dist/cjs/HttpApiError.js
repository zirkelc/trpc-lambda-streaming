"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TypeId = exports.PropertyKeysNoSymbol = exports.Issue = exports.HttpApiDecodeError = void 0;
var ArrayFormatter = _interopRequireWildcard(require("@effect/schema/ArrayFormatter"));
var Schema = _interopRequireWildcard(require("@effect/schema/Schema"));
var TreeFormatter = _interopRequireWildcard(require("@effect/schema/TreeFormatter"));
var Effect = _interopRequireWildcard(require("effect/Effect"));
var _Function = require("effect/Function");
var HttpApiSchema = _interopRequireWildcard(require("./HttpApiSchema.js"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/**
 * @since 1.0.0
 */

/**
 * @since 1.0.0
 * @category type ids
 */
const TypeId = exports.TypeId = /*#__PURE__*/Symbol.for("@effect/platform/HttpApiError");
/**
 * @since 1.0.0
 * @category schemas
 */
const PropertyKeysNoSymbol = exports.PropertyKeysNoSymbol = /*#__PURE__*/Schema.transform( /*#__PURE__*/Schema.Array( /*#__PURE__*/Schema.Union(Schema.String, Schema.Number)), /*#__PURE__*/Schema.Array( /*#__PURE__*/Schema.Union(Schema.SymbolFromSelf, Schema.String, Schema.Number)), {
  decode: _Function.identity,
  encode: items => items.filter(item => typeof item !== "symbol")
});
/**
 * @since 1.0.0
 * @category schemas
 */
const Issue = exports.Issue = /*#__PURE__*/Schema.Struct({
  _tag: /*#__PURE__*/Schema.Literal("Pointer", "Unexpected", "Missing", "Composite", "Refinement", "Transformation", "Type", "Forbidden"),
  path: PropertyKeysNoSymbol,
  message: Schema.String
});
/**
 * @since 1.0.0
 * @category errors
 */
class HttpApiDecodeError extends /*#__PURE__*/Schema.TaggedError()("HttpApiDecodeError", {
  issues: /*#__PURE__*/Schema.Array(Issue),
  message: Schema.String
}, /*#__PURE__*/HttpApiSchema.annotations({
  status: 400,
  description: "HttpApiDecodeError: The request did not match the expected schema"
})) {
  /**
   * @since 1.0.0
   */
  static fromParseError(error) {
    return ArrayFormatter.formatError(error).pipe(Effect.zip(TreeFormatter.formatError(error)), Effect.map(([issues, message]) => new HttpApiDecodeError({
      issues,
      message
    })));
  }
  /**
   * @since 1.0.0
   */
  static refailParseError(error) {
    return Effect.flatMap(HttpApiDecodeError.fromParseError(error), Effect.fail);
  }
}
exports.HttpApiDecodeError = HttpApiDecodeError;
//# sourceMappingURL=HttpApiError.js.map